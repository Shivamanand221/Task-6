name: Deploy Strapi to AWS ECS (Terraform + DockerHub)

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: shivamanand221/strapi
  TAG: latest
  TERRAFORM_DIR: ./strapi-terraform  

jobs:
  deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Debug Docker login status
        run: docker info

      - name: Build Docker Image
        run: |
          docker build -t $DOCKER_IMAGE:$TAG .

      - name: Push Docker Image
        run: |
          docker push $DOCKER_IMAGE:$TAG

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve tfplan


 
# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main
#   pull_request:

# jobs:
#   terraform:
#     name: 'Terraform Apply'
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.7.5

#       - name: Create SSH Public Key File
#         run: |
#           echo "$DEPLOYER_KEY_PUB_BASE64" | base64 -d > strapi-terraform/deployer-key.pub
#         env:
#           DEPLOYER_KEY_PUB_BASE64: ${{ secrets.DEPLOYER_KEY_PUB_BASE64 }}


#       - name: Terraform Init
#         run: terraform init
#         working-directory: ./strapi-terraform
#         env:
#             AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       - name: Terraform Format Check
#         run: terraform fmt -check
#         working-directory: ./strapi-terraform

#       - name: Terraform Validate
#         run: terraform validate
#         working-directory: ./strapi-terraform

#       - name: Terraform Plan
#         run: terraform plan
#         working-directory: ./strapi-terraform
#         env:
#             AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#       - name: Terraform Apply
#         run: terraform apply -auto-approve
#         working-directory: ./strapi-terraform
#         env:
#             AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#             AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

