version: '3.8'

services:
  strapi_app:
    image: shivamanand221/strapi-app:latest
    container_name: strapi_app
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: strapi_postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      APP_KEYS: d16c3ea9e3948146a15d1ea543538fa4e67e8437aaae6a14f34986a308ba8cd9,f1a9d2a9c32207a3499485ff66c6af6862a1080cba8e5999dbd9d31d2f69d82c"
      ADMIN_JWT_SECRET: Whgm/ztYqo4TRI5hby2TYdxAR9AadGlqoAPmd0zFfuQ=
      JWT_SECRET: UGQ+Qlr3M1wKG/nDQcJ3gaEYUttK+LdRWA6YUkvLxZ8=
      API_TOKEN_SALT: 8xZ6eR8Y0F6J12xas+5LHg==
      TRANSFER_TOKEN_SALT: BmKOus2oWxIJMY9DUf5eXA==
      ENCRYPTION_KEY: Ob0xsmOsx4WrAL4Ta7xsFsHyvChDyN9Y1ohyTHU728w=
    ports:
      - "1337:1337"
    depends_on:
      - strapi_postgres
    volumes:
      - ./public:/app/public

  strapi_postgres:
    image: postgres:15
    container_name: strapi_postgres
    restart: always
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  # nginx:
  #   image: nginx:alpine
  #   container_name: strapi_nginx
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - strapi_app
  #   networks:
  #     - strapi-net

volumes:
  pgdata: